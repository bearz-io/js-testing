name: "cd"

on:
  push:
    tags: "**"
    branches-ignore: '**'
    paths: 
      - '**'
      - '.github/workflows/cd.yaml'  

permissions:
  contents: write
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Run Deno Tests
        run: deno task test

      - name: Run Bun Install
        run: deno task bun:install

      - name: Run Node Tests
        run: deno task test:npm

      - name: Run Bun Tests
        run: deno task test:bun

      - name: "Npm Audit"
        run: deno task npm:audit
        if: matrix.os == 'ubuntu-latest'
        
      - name: Jsr Publish Dry Run
        run: deno task jsr:publish:test
        if: matrix.os == 'ubuntu-latest'

      - name: Npm Publish Dry Run
        run: deno task npm:publish:test
        if: matrix.os == 'ubuntu-latest'

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write
      discussions: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
  
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: 'https://registry.npmjs.org'
  
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
  
      - name: Bun Install
        run: deno task bun:install

      - name: JSR Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: deno publish

      - name: NPM Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish --provenance --access public
        working-directory: ./npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${TAG#v}" \
              --generate-notes \
              --discussion-category "Releases"



